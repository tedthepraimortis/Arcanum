class InvulnerabilitySpell : ArcanumSpell
{
	override int GetIndex() { return 60; }
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeRestoration'; }
	override string GetName() { return loc("$RESTORATION_INVULNERABILITY_NAME"); }
	override int GetSpellType() { return SType_SelfOrMass | SType_Targeted; }
	override int GetManaCost() { return 200; }
	override string GetDescription() { return loc("$RESTORATION_INVULNERABILITY_DESC"); }
	override string GetTechnicalInfo() { return loc("$RESTORATION_INVULNERABILITY_INFO"); }
	override int GetMaxExperience() { return 0; }
	override class<ArcanumSigil> GetSigil() { return 'InvulnerabilitySigil'; }
}

class InvulnerabilitySigil : ArcanumSigil
{
	override void ActivateTargeted()
	{
		Actor a = AimTarget();
		if (a && a.Health > 0)
		{
			GiveInvulnerability(a);
		}
	}

	override void ActivateSelfOrMass()
	{
		GiveInvulnerability(master);
	}

	private void GiveInvulnerability(Actor other)
	{
		HDUPK sphere = HDInvulnerabilitySphere(Spawn("HDInvulnerabilitySphere", other.pos));
		//HDUPK sphere = GreenSphere(Spawn("GreenSphere", other.pos));
		sphere.picktarget = other;
		sphere.A_HDUPKGive();
	}

	override void InitRuneSlots()
	{
		vector2 BigSize = (8, 13.33);
		CreateRuneSlot((-23, 0), BigSize, 2.25);
		CreateRuneSlot((0, 23), BigSize, 2.25);
		CreateRuneSlot((23, 0), BigSize, 2.25);
		CreateRuneSlot((0, -23), BigSize, 2.25);

		vector2 SmallSize = (6, 10);
		CreateRuneSlot((-41.1, 0), SmallSize, 1.3);
		CreateRuneSlot((0, 41.1), SmallSize, 1.3);
		CreateRuneSlot((41.1, 0), SmallSize, 1.3);
		CreateRuneSlot((0, -41.1), SmallSize, 1.3);
	}

	Default
	{
		Height 44;
		Radius 50;
		StencilColor "11FF11";
	}

	States
	{
		Spawn:
			CRRE G 0;
			Goto Super::Spawn;
	}
}
