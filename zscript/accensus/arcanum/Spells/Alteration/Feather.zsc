class FeatherSpell : ArcanumSpell
{
	override int GetIndex() { return 50; }
	override class<ArcanumSpellTree> GetTree() { return 'ArcanumTreeAlteration'; }
	override string GetName() { return loc("$ALTERATION_FEATHER_NAME"); }
	override int GetSpellType() { return SType_Targeted; }
	override int GetManaCost() { return 20; }
	override string GetDescription() { return String.Format(loc("$ALTERATION_FEATHER_DESC")); }
	override string GetTechnicalInfo() { return loc("$ALTERATION_FEATHER_INFO"); }
	override int GetMaxExperience() { return 0; }
	override class<ArcanumSigil> GetSigil() { return 'FeatherSigil'; }
}

class FeatherSigil : ArcanumSigil
{
	override void ActivateTargeted()
	{
		FLineTraceData Data;
		LineTrace(angle, HDCONST_ONEMETRE * 100, pitch, TRF_THRUACTORS, 0, 0, 0, Data);

		PlayCastSound(self, "Arcanum/Alteration/Feather");
		Actor a = Spawn("FeatherEffect", (Data.HitLocation.xy, Data.HitSector.floorplane.ZAtPoint(data.HitLocation.xy)));
		a.tracer = master;
	}

	override void InitRuneSlots()
	{
		vector2 Size = (3.5, 5.83);
		CreateRuneSlot((-10.6, 0), Size, 1.0);
		CreateRuneSlot((10.6, 0), Size, 1.0);
	}

	Default
	{
		StencilColor "C4BF87";
	}

	States
	{
		Spawn:
			CRAL F 0;
			Goto Super::Spawn;
	}
}

class FeatherEffect : Actor
{
	override void OnDestroy()
	{
		for (int i = 0; i < MAXPLAYERS; ++i)
		{
			let plr = players[i].mo;
			if (!plr)
			{
				continue;
			}
			plr.gravity = plr.default.gravity;
		}

		Super.OnDestroy();
	}

	Default
	{
		+NOINTERACTION
		Alpha 1.0;
		ReactionTime 35 * 15;
	}

	States
	{
		Spawn:
			TNT1 A 1
			{
				for (int i = 0; i < MAXPLAYERS; ++i)
				{
					let plr = players[i].mo;
					if (!plr)
					{
						continue;
					}

					if (Distance2D(plr) < 192 && plr.pos.z - pos.z < 1024)
					{
						if (plr && plr.vel.z < -8)
						{
							plr.vel.z *= 0.92;
						}
						plr.gravity = 0.1;
					}
					else
					{
						plr.gravity = plr.default.gravity;
					}
				}

				for (int i = 0; i < 360; ++i)
				{
					if (!random(0, 12))
					{
						A_SpawnParticle(0xC4BF87, SPF_FULLBRIGHT | SPF_RELATIVE, random(10, 20), random(5, 10), i, random(0, 192), 0, 2, 0, 2, frandom(1, 16), startalphaf: alpha);
					}
					A_SpawnParticle(0xC4BF87, SPF_FULLBRIGHT | SPF_RELATIVE, 1, 18, i, 192, 0, 2, startalphaf: alpha);
				}

				if (--ReactionTime <= 0)
				{
					A_FadeOut(0.02);
				}
			}
			Loop;
	}
}
